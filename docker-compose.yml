services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: suspixels_api
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: 
      - .env
    environment:
      DATABASE_HOST: postgres
      REDIS_HOST: redis
      DATABASE_PORT: ${DATABASE_PORT}
      REDIS_PORT: ${REDIS_PORT}
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:17.4
    container_name: suspixels_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PORT: ${DATABASE_PORT}
    command: -p ${DATABASE_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME} -p ${DATABASE_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.4.2
    container_name: suspixels_redis
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local